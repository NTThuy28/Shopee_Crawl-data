# -*- coding: utf-8 -*-
"""Crawl_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oBcnoiHu_4HL2htwlTiLc4XRuuwlcs59
"""

import pandas as pd
import numpy as np
import os
import json
import requests
import concurrent.futures
from concurrent.futures import ThreadPoolExecutor

category_id = {
    "electric_devices": '11036132',
    "phone_and_tablets": '11036030',
    "computer_laptop": '11035954',
    "camera_camcorder": '11036101',
    "watch": '11035788',
    "electric_equipment": '11036971'
}
category_name = {
    "electric_devices": 'Thiết bị điện tử',
    "phone_and_tablets": 'Điện thoại và phụ kiện',
    "computer_laptop": 'Máy tính và laptop',
    "camera_camcorder": 'Máy ảnh và máy quay phim',
    "watch": 'Đồng hồ',
    "electric_equipment": 'Thiết bị điện gia dụng'
}

#Lấy thông tin của shop và danh mục sản phẩm
all_shops = []
LIMIT_MAX = 25
def fetch_shops(category, cat_id, offset):
    LIMIT_MAX = 25
    url_shops = f'https://shopee.vn/api/v4/official_shop/get_shops?category_id={cat_id}&limit={LIMIT_MAX}&offset={offset}&fbclid=IwAR24HNHBcWlo9WIqIa1qz2-KU320QCxsrVYhDHplx5jl891kJNHNi0VQxSM'
    r = requests.get(url_shops)
    data_shops = r.json()['data']['official_shops']

    # Thêm category_id và category_name vào dữ liệu
    for shop in data_shops:
        shop['category_id'] = cat_id
        shop['category_name'] = category_name[category]

    return data_shops
#Đa luồng
def process_category(category, cat_id):
    total_shops = 128
    with concurrent.futures.ThreadPoolExecutor() as executor:
        results = []
        for i in range(total_shops // LIMIT_MAX + 1):
            OFFSET = i * LIMIT_MAX
            results.append(executor.submit(fetch_shops, category, cat_id, OFFSET))

        for future in concurrent.futures.as_completed(results):
            #Lấy kq từ mỗi API trả về
            data_shops = future.result()
            #Thêm thông tin cửa hàng vào danh sách all_shops
            all_shops.extend(data_shops)

for category, cat_id in category_id.items():
    process_category(category, cat_id)

df_shops = pd.DataFrame(all_shops)
df_shops
df_shops.to_csv('shops.csv', index=False, encoding='utf-8-sig')


#Lấy thông tin chi tiết các shop
def fetch_shop_details(username, selected_fields):
    url_shop_detail = f'https://shopee.vn/api/v4/shop/get_shop_base'
    params = {
        "entry_point": "",
        "need_cancel_rate": True,
        "request_source": "shop_home_page",
        "username": username,
        "version": 1
    }
    headers = {
        "Accept": "application/xhtml",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
    }
    cookies = {
    "SPC_F": "nZvJ2wEJshcclHD5r9G3yCA1VDhUAhsv",
    "REC_T_ID": "1030cd8a-e1aa-11ed-b016-1409dcf0309c",
    "SPC_CLIENTID": "blp2SjJ3RUpzaGNjuzbpbhuwotzgsqkl",
    "_hjSessionUser_868286": "eyJpZCI6IjY0MWRlMDJmLWEzMGMtNTYzMC04ODhjLTE0OWUwMmRjZjA1YiIsImNyZWF0ZWQiOjE2ODQ5OTMwOTUzNjgsImV4aXN0aW5nIjp0cnVlfQ==",
    "SC_DFP": "JbfKgoNNluWjuWwNIJWPnPmKtRvRZETz",
    "_ga_RLCQNPT3EM": "GS1.1.1689349378.1.1.1689350194.60.0.0",
    "_ga_3XVGTY3603": "GS1.1.1690176061.6.1.1690176108.13.0.0",
    "_ga_FV78QC1144": "GS1.1.1690202205.5.0.1690202207.58.0.0",
    "_gcl_au": "1.1.161124877.1690623214",
    "_med": "affiliates",
    "_ga_M32T05RVZT": "deleted",
    "SPC_ST": ".WG4wMDRyTnFhV3JwZ2RNQw6Evk4VjdwSQUrm0GA8KNtHzrYIPiEUzhaQOQbICJT6ZwbvRw1A7yA+uzKXQb2/QwMILOvy7d+OdBmEP4/V+E3w3znZmvenKbo3LwAg1kvk5+e6Unkc2Db/29KOFSRac7dM8LeUxnYN07M1vT7A5n35QGPa6QRKUFYLlP8RrcB6l1q7muEUJCwa/JB0D/kybQ==",
    "SPC_U": "294466107",
    "SPC_R_T_IV": "YW5ONWtIcHVqYnlnYkxBbg==",
    "SPC_T_ID": "1byv/E3FMwCH0g+S8bwGCdUyJvd7BPkAUzTSwMesZOipWmEHku7PoU+VOSDZsjDNBR/GGwwM+cfwURETeKKQ11DTeIkwGZw508ewgtAXZNMFvkUTsQq8hVjejyX+fbm1E4pW+qoV9CKMYyFrHhpEXHlkPk79m1T+DGILKhf8+sc=",
    "SPC_T_IV": "YW5ONWtIcHVqYnlnYkxBbg==",
    "SPC_R_T_ID": "1byv/E3FMwCH0g+S8bwGCdUyJvd7BPkAUzTSwMesZOipWmEHku7PoU+VOSDZsjDNBR/GGwwM+cfwURETeKKQ11DTeIkwGZw508ewgtAXZNMFvkUTsQq8hVjejyX+fbm1E4pW+qoV9CKMYyFrHhpEXHlkPk79m1T+DGILKhf8+sc=",
    "csrftoken": "V85MhSHICWqsp05HRUOJuFz8CKezUU7R",
    "SPC_SI": "3GPQZAAAAABCVTY3QmEyQ6jJQAAAAAAAcWNSdHFyNzc=",
    "_QPWSDCXHZQA": "46439acd-8797-486c-c086-fe20bef38f13",
    "shopee_webUnique_ccd": "cM6P10Nk2C7mH3%2FWFAtasw%3D%3D%7C1koiU%2Fp%2Fr8maZ%2FZKyVA9lBxNzteJ2XSU1i%2BbTrbx%2B6sfjoYVTF2e8GTjfnSwbgRi3zbHF4bCybk%3D%7CyXglF5%2FF9e%2FkZMbv%7C08%7C3",
    "ds": "9b89fed9b10c2450362d2458d5e4fd0c",
    "_ga_M32T05RVZT": "GS1.1.1691899569.49.1.1691899580.49.0.0",
    "AMP_TOKEN": "%24NOT_FOUND",
    "_ga": "GA1.2.1104905205.1682702009",
    "_gid": "GA1.2.1061474378.1691899609",
    "SPC_EC": "Wkd6U3ZCNFR0ZWpYWmt5NDurJBYSOcTMRKkY7+qJ7Nj2RS0/lwAPRUkBfehhkMWI7SpmbQw4j/0SXEET+xxpRv0I9030PXCfxzKd+Apkf727jmrXURNa/aM086aDLNRoSkkGZgVI1qce2BbO+kf9FAzJXXPmFCV1ceIASNvKRjw="
}

    r = requests.get(url_shop_detail, headers=headers, params=params, cookies=cookies)
    ss_detail = r.json().get('data')

    if ss_detail is not None:
        ss_detail_selected = {field: ss_detail[field] for field in selected_fields}
        return ss_detail_selected
    return None

all_shop_details = []
selected_fields = ['shopid', 'userid', 'name', 'follower_count', 'show_official_shop_label', 'is_shopee_verified',
                   'rating_star', 'item_count', 'response_rate', 'shop_rating', 'seller_metrics', 'ctime']

with concurrent.futures.ThreadPoolExecutor() as executor:
    futures = []
    for index, row in df_shops.iterrows():
        username = row['username']
        futures.append(executor.submit(fetch_shop_details, username, selected_fields))

    for future in concurrent.futures.as_completed(futures):
        result = future.result()
        if result is not None:

            all_shop_details.append(result)


df_shop_details = pd.DataFrame(all_shop_details)
df_shop_details.to_csv('shop_details.csv', index=False, encoding='utf-8-sig')

#df_shop_details = df_shop_details.drop_duplicates(subset=['shopid'])

all_shops_mapping = df_shops[['shopid', 'username']].drop_duplicates()

df_shop_details = pd.merge(df_shop_details, all_shops_mapping, on='shopid', how='left')

df_shop_details.to_csv('shop_details.csv', index=False, encoding='utf-8-sig')



#Lấy thông tin shop category
shop_ids = df_shop_details['shopid']

all_categories = []

def get_shop_categories(shop_id):
    url_categories = "https://shopee.vn/api/v4/shop/get_categories"
    params = {
        "limit": 30,
        "offset": 0,
        "shopid": shop_id,
        "two_tier_cate": 1,
        "version": 2
    }
    headers = {
        "Accept": "application/xhtml",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
    }
    cookies = {
    "SPC_F": "nZvJ2wEJshcclHD5r9G3yCA1VDhUAhsv",
    "REC_T_ID": "1030cd8a-e1aa-11ed-b016-1409dcf0309c",
    "SPC_CLIENTID": "blp2SjJ3RUpzaGNjuzbpbhuwotzgsqkl",
    "_hjSessionUser_868286": "eyJpZCI6IjY0MWRlMDJmLWEzMGMtNTYzMC04ODhjLTE0OWUwMmRjZjA1YiIsImNyZWF0ZWQiOjE2ODQ5OTMwOTUzNjgsImV4aXN0aW5nIjp0cnVlfQ==",
    "SC_DFP": "JbfKgoNNluWjuWwNIJWPnPmKtRvRZETz",
    "_ga_RLCQNPT3EM": "GS1.1.1689349378.1.1.1689350194.60.0.0",
    "_ga_3XVGTY3603": "GS1.1.1690176061.6.1.1690176108.13.0.0",
    "_ga_FV78QC1144": "GS1.1.1690202205.5.0.1690202207.58.0.0",
    "_gcl_au": "1.1.161124877.1690623214",
    "_med": "affiliates",
    "_ga_M32T05RVZT": "deleted",
    "SPC_ST": ".WG4wMDRyTnFhV3JwZ2RNQw6Evk4VjdwSQUrm0GA8KNtHzrYIPiEUzhaQOQbICJT6ZwbvRw1A7yA+uzKXQb2/QwMILOvy7d+OdBmEP4/V+E3w3znZmvenKbo3LwAg1kvk5+e6Unkc2Db/29KOFSRac7dM8LeUxnYN07M1vT7A5n35QGPa6QRKUFYLlP8RrcB6l1q7muEUJCwa/JB0D/kybQ==",
    "SPC_U": "294466107",
    "SPC_R_T_IV": "YW5ONWtIcHVqYnlnYkxBbg==",
    "SPC_T_ID": "1byv/E3FMwCH0g+S8bwGCdUyJvd7BPkAUzTSwMesZOipWmEHku7PoU+VOSDZsjDNBR/GGwwM+cfwURETeKKQ11DTeIkwGZw508ewgtAXZNMFvkUTsQq8hVjejyX+fbm1E4pW+qoV9CKMYyFrHhpEXHlkPk79m1T+DGILKhf8+sc=",
    "SPC_T_IV": "YW5ONWtIcHVqYnlnYkxBbg==",
    "SPC_R_T_ID": "1byv/E3FMwCH0g+S8bwGCdUyJvd7BPkAUzTSwMesZOipWmEHku7PoU+VOSDZsjDNBR/GGwwM+cfwURETeKKQ11DTeIkwGZw508ewgtAXZNMFvkUTsQq8hVjejyX+fbm1E4pW+qoV9CKMYyFrHhpEXHlkPk79m1T+DGILKhf8+sc=",
    "csrftoken": "V85MhSHICWqsp05HRUOJuFz8CKezUU7R",
    "SPC_SI": "3GPQZAAAAABCVTY3QmEyQ6jJQAAAAAAAcWNSdHFyNzc=",
    "_QPWSDCXHZQA": "46439acd-8797-486c-c086-fe20bef38f13",
    "shopee_webUnique_ccd": "cM6P10Nk2C7mH3%2FWFAtasw%3D%3D%7C1koiU%2Fp%2Fr8maZ%2FZKyVA9lBxNzteJ2XSU1i%2BbTrbx%2B6sfjoYVTF2e8GTjfnSwbgRi3zbHF4bCybk%3D%7CyXglF5%2FF9e%2FkZMbv%7C08%7C3",
    "ds": "9b89fed9b10c2450362d2458d5e4fd0c",
    "_ga_M32T05RVZT": "GS1.1.1691899569.49.1.1691899580.49.0.0",
    "AMP_TOKEN": "%24NOT_FOUND",
    "_ga": "GA1.2.1104905205.1682702009",
    "_gid": "GA1.2.1061474378.1691899609",
    "SPC_EC": "Wkd6U3ZCNFR0ZWpYWmt5NDurJBYSOcTMRKkY7+qJ7Nj2RS0/lwAPRUkBfehhkMWI7SpmbQw4j/0SXEET+xxpRv0I9030PXCfxzKd+Apkf727jmrXURNa/aM086aDLNRoSkkGZgVI1qce2BbO+kf9FAzJXXPmFCV1ceIASNvKRjw="
}

    r = requests.get(url_categories, headers=headers, params=params, cookies=cookies)
    data = r.json().get('data', {})
    shop_categories = data.get('shop_categories', [])
    categories = []
    for category in shop_categories:
        category_data = {
            'shopid': shop_id,
            'shop_category_id': category.get('shop_category_id'),
            'display_name': category.get('display_name'),
            'category_type': category.get('category_type'),
            'total': category.get('total'),
            'collection_type': category.get('collection_type'),
            'rule': category.get('rule')
        }
        categories.append(category_data)
    return categories

# Đa luồng đi
with concurrent.futures.ThreadPoolExecutor() as executor:
    # Gọi từng API từng shop
    futures = [executor.submit(get_shop_categories, shop_id) for shop_id in shop_ids]
    for future in concurrent.futures.as_completed(futures):
        categories = future.result()
        all_categories.extend(categories)

df_shop_categories = pd.DataFrame(all_categories)

df_shop_categories.to_csv('shop_categories.csv', index=False, encoding='utf-8-sig')

df_shop_categories = df_shop_categories.drop_duplicates(subset=['shop_category_id'])



#Lấy thông tin về sản phẩm
from functools import partial

all_products = []

LIMIT_PRODUCTS = 30
url_base = 'https://shopee.vn/api/v4/shop/rcmd_items'

def fetch_products(category_id, shop_id):
    OFFSET_PRODUCTS = 0
    params = {
        'bundle': 'shop_page_category_tab_main',
        'item_id': category_id,
        'limit': LIMIT_PRODUCTS,
        'offset': OFFSET_PRODUCTS,
        'shop_id': shop_id,
        'sort_type': 1,
        'upstream': 'pdp',
        'fbclid': 'IwAR1qUmRZVNWqLDu6R6gWda0mgZWM15j2pcd--xVwjXn1ePSuju6S5-UaZeg'
    }

    headers = {
        "Accept": "application/xhtml",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
    }
    cookies = {
    "SPC_F": "nZvJ2wEJshcclHD5r9G3yCA1VDhUAhsv",
    "REC_T_ID": "1030cd8a-e1aa-11ed-b016-1409dcf0309c",
    "SPC_CLIENTID": "blp2SjJ3RUpzaGNjuzbpbhuwotzgsqkl",
    "_hjSessionUser_868286": "eyJpZCI6IjY0MWRlMDJmLWEzMGMtNTYzMC04ODhjLTE0OWUwMmRjZjA1YiIsImNyZWF0ZWQiOjE2ODQ5OTMwOTUzNjgsImV4aXN0aW5nIjp0cnVlfQ==",
    "SC_DFP": "JbfKgoNNluWjuWwNIJWPnPmKtRvRZETz",
    "_ga_RLCQNPT3EM": "GS1.1.1689349378.1.1.1689350194.60.0.0",
    "_ga_3XVGTY3603": "GS1.1.1690176061.6.1.1690176108.13.0.0",
    "_ga_FV78QC1144": "GS1.1.1690202205.5.0.1690202207.58.0.0",
    "_gcl_au": "1.1.161124877.1690623214",
    "_med": "affiliates",
    "_ga_M32T05RVZT": "deleted",
    "SPC_ST": ".WG4wMDRyTnFhV3JwZ2RNQw6Evk4VjdwSQUrm0GA8KNtHzrYIPiEUzhaQOQbICJT6ZwbvRw1A7yA+uzKXQb2/QwMILOvy7d+OdBmEP4/V+E3w3znZmvenKbo3LwAg1kvk5+e6Unkc2Db/29KOFSRac7dM8LeUxnYN07M1vT7A5n35QGPa6QRKUFYLlP8RrcB6l1q7muEUJCwa/JB0D/kybQ==",
    "SPC_U": "294466107",
    "SPC_R_T_IV": "YW5ONWtIcHVqYnlnYkxBbg==",
    "SPC_T_ID": "1byv/E3FMwCH0g+S8bwGCdUyJvd7BPkAUzTSwMesZOipWmEHku7PoU+VOSDZsjDNBR/GGwwM+cfwURETeKKQ11DTeIkwGZw508ewgtAXZNMFvkUTsQq8hVjejyX+fbm1E4pW+qoV9CKMYyFrHhpEXHlkPk79m1T+DGILKhf8+sc=",
    "SPC_T_IV": "YW5ONWtIcHVqYnlnYkxBbg==",
    "SPC_R_T_ID": "1byv/E3FMwCH0g+S8bwGCdUyJvd7BPkAUzTSwMesZOipWmEHku7PoU+VOSDZsjDNBR/GGwwM+cfwURETeKKQ11DTeIkwGZw508ewgtAXZNMFvkUTsQq8hVjejyX+fbm1E4pW+qoV9CKMYyFrHhpEXHlkPk79m1T+DGILKhf8+sc=",
    "csrftoken": "V85MhSHICWqsp05HRUOJuFz8CKezUU7R",
    "SPC_SI": "3GPQZAAAAABCVTY3QmEyQ6jJQAAAAAAAcWNSdHFyNzc=",
    "_QPWSDCXHZQA": "46439acd-8797-486c-c086-fe20bef38f13",
    "shopee_webUnique_ccd": "cM6P10Nk2C7mH3%2FWFAtasw%3D%3D%7C1koiU%2Fp%2Fr8maZ%2FZKyVA9lBxNzteJ2XSU1i%2BbTrbx%2B6sfjoYVTF2e8GTjfnSwbgRi3zbHF4bCybk%3D%7CyXglF5%2FF9e%2FkZMbv%7C08%7C3",
    "ds": "9b89fed9b10c2450362d2458d5e4fd0c",
    "_ga_M32T05RVZT": "GS1.1.1691899569.49.1.1691899580.49.0.0",
    "AMP_TOKEN": "%24NOT_FOUND",
    "_ga": "GA1.2.1104905205.1682702009",
    "_gid": "GA1.2.1061474378.1691899609",
    "SPC_EC": "Wkd6U3ZCNFR0ZWpYWmt5NDurJBYSOcTMRKkY7+qJ7Nj2RS0/lwAPRUkBfehhkMWI7SpmbQw4j/0SXEET+xxpRv0I9030PXCfxzKd+Apkf727jmrXURNa/aM086aDLNRoSkkGZgVI1qce2BbO+kf9FAzJXXPmFCV1ceIASNvKRjw="
}

    try:
        while True:
            r = requests.get(url_base, params=params, headers=headers, cookies=cookies)
            r.raise_for_status()
            data = r.json().get('data', {})
            items = data.get('items', [])
            count = data.get('total', 0)

            for item in items:
                item['shop_category_id'] = category_id

            all_products.extend(items)

            if len(items) < LIMIT_PRODUCTS:
                break
            OFFSET_PRODUCTS += LIMIT_PRODUCTS
            params['offset'] = OFFSET_PRODUCTS

        return len(all_products)
    except requests.exceptions.RequestException as e:
        print(f"Lỗi xảy ra khi lấy dữ liệu từ shop {shop_id}: {str(e)}")

# Đa luồng
with ThreadPoolExecutor(max_workers=10) as executor:
    futures = []
    for _, row in df_shop_categories.iterrows():
        shop_id = row['shopid']
        category_id = row['shop_category_id']
        fetch_fn = partial(fetch_products, category_id, shop_id)
        future = executor.submit(fetch_fn)
        futures.append(future)

    # Tổng hợp các luồng, bao gồm cả giá trị null
    total_products = sum(future.result() for future in futures if future.result() is not None)

df_products = pd.DataFrame(all_products)
df_products['shop_category_id'] = df_products.apply(lambda row: row.get('shop_category_id', None), axis=1)
df_products.to_csv('shop_products.csv', index=False, encoding='utf-8-sig')

print("Tổng số cửa hàng đã lấy từ category:", len(all_shops))
print("Tổng số shop đã lấy thông tin chi tiết:", len(all_shop_details))
print("Tổng số shop đã lấy thông tin chi tiết:", len(all_categories))
print("Tổng số sản phẩm của tất cả các shop:", total_products)
